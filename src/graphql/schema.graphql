type User {
  id: ID
  email: String
  username: String
  displayName: String
  avatar: String
  token: String
  error: String
}

input SignUpUserInput {
  email: String!
  username: String!
  displayName: String!
  password: String!
  passwordConfirmation: String!
}

type SignUpUserPayload {
  user: User!
  errors: [String!]
}

input SignInUserInput {
  emailOrUsername: String!
  password: String!
}

type SignInUserPayload {
  user: User!
  errors: [String!]
}

input SignOutUserInput

type SignOutUserPayload {
  isSignOutSuccessful: Boolean
}

input EditUserInput {
  id: ID!
  email: String!
  username: String!
  displayName: String!
  password: String
  passwordConfirmation: String
  currentPassword: String!
}

type EditUserPayload {
  errors: [String!]
}

type Category {
  id: ID!
  name: String!
}

type Tag {
  tagId: ID!
  name: String!
}

type Post {
  id: ID!
  title: String!
  body: String!
  category: Category!
  tags: [Tag]
  user: User
}

type PaginatedPostType {
  pagePosts: [Post]
  pagesCount: Int
}

input CreatePostInput {
  userId: ID!
  title: String!
  body: String!
  categoryId: ID!
  tagsIds: [ID!]
}

type CreatePostPayload {
  post: Post
  errors: [String]
}

input EditPostInput {
  userId: ID!
  postId: ID!
  title: String!
  body: String!
  categoryId: ID!
  tagsIds: [ID!]
}

type EditPostPayload {
  post: Post
  errors: [String]
}

input DeletePostInput {
  userId: ID!
  postId: ID!
}

type DeletePostPayload {
  isDeleteSuccessful: Boolean
}

input CreateTagInput {
  name: String!
}

type CreateTagPayload {
  tag: Tag
  errors: [String]
}

type Query {
  currentUser: User!
  post(postId: ID!): Post
  posts(pageNumber: String, title: String, description: String, categoryId: ID, tagsIds: [ID!]): PaginatedPostType
  userPost(userId: ID!, postId: ID!): Post
  userPosts(userId: ID!, pageNumber: String, title: String, description: String, categoryId: ID, tagsIds: [ID!]): PaginatedPostType
  categories: [Category]
  tags: [Tag]
}

type Mutation {
  signUpUser(input: SignUpUserInput!): SignUpUserPayload!
  signInUser(input: SignInUserInput!): SignInUserPayload!
  signOutUser(input: SignOutUserInput!): SignOutUserPayload!
  editUser(input: EditUserInput!): EditUserPayload!
  createPost(input: CreatePostInput!): CreatePostPayload!
  editPost(input: EditPostInput!): EditPostPayload!
  deletePost(input: DeletePostInput!): DeletePostPayload!
  createTag(input: CreateTagInput!): CreateTagPayload!
}
